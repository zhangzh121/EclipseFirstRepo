<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 1、全包扫描@Service demo所在地是标示各个模块，此处使用通配符是扫描所有模块业务层-->
	<context:component-scan base-package="com.atguigu.jf.console.*.service"></context:component-scan>
	<!-- 2、整合mybatis （1）装配数据源、连接池 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- (2)配置sqlsessionFactoryBean  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="druidDataSource"></property>
		<!-- 设置所有的mapper.xml文件所在位置 -->
		<property name="mapperLocations" value="classpath:com/atguigu/jf/console/baseapi/*/mapper/*.xml"></property>
	</bean>
	<!-- (3)配置mapper接口扫描类 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.atguigu.jf.console.baseapi.*"></property>
		<!-- 装配sqlsessionfactoryBean -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<!-- 3、给数据源配置事务 （1）-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="druidDataSource"></property>
	</bean>
	<!-- （2）使用拦截器配置事务 -->
	<tx:advice id="transactionManagerAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 会对数据库进行修改的方法操作 -->
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			<tx:method name="append*" propagation="REQUIRED"/>
			<!-- 仅仅查询 -->
			
			
		</tx:attributes>
	</tx:advice>
	<!-- （3）配置切面通知及切入点表达式 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.atguigu.if.console.*.service.impl.*(..))" id="transactionPointCut"/>
		<aop:advisor advice-ref="transactionManagerAdvice" pointcut-ref="transactionPointCut"/>
	</aop:config>
	<!-- （4）开启事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
